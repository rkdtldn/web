

웹브라우저회사에서 제작

1995년 네스케이프 커뮤니케이션즈 사의 마크 안드레센이 DOM과 통신 할 수 있는
스크립트 언어를 필요로 하고 있었는데, 그 회사의 브렌던 아이크(Brendan Eich)가
처음에는 모카(Mocha)라는 이름으로, 나중에는 라이브스크립트(LiveScript)라는 이름으로 개발

 *** 웹브라우저 -> 인터넷 연결 프로그램

이후 자바로 유명한 썬 마이크로 시스템사의 계약을 통해 최종적으로 자바스크립트가 되었다.

한편 MS사에서는 JScript라는 이름으로 독자적인 자바스크립트를 개발


1996년부터 RCMA 인터네셔널이란 기관에서 자바스크립트의 표준화 작업을 맡게 되었고
이 때문에 자바스크립트의 정식명칭은 ECMAscript가 됨.

1997년 ECMAscript 1 발표
1998년 6월 ECMAscript 2 발표
1999년 12월 ECMAscript 3 발표
자바스크립트 표준 사양에 XMLHttpRequest라는 기능이 있었는데 오늘 날 ajax의 주요 기술이됨

2012년 MS사 웹브라우저가 엣지로 재명

ECMAscript / SPA(리액트, 뷰, 랭귤러) jsx = xhtm + jsx

jQurey -> 호환성, 프론트입장에서 코딩

자바스크립트의 특징
- 웹의 동작 (동적) 구현하기 위한 언어
- 웹 브라우저에서 동적(단, node.js는 서버에서 동작)
- html문서 내에서 <script> ~ </script> 태그 안에 작성
- 대소문자를 구별
- 객체 기반의 스크립트 언어
- 웹 브라우저 자바스크립트 엔진이 내장되어 있기 때문에 사용이 가능

자바스크립트의 출력
- document.write() 함수를 통해 <body>에 출력
- console.log() 함수를 통해 브라우저 console에 출력

외부 자바스크립트 파일로 적용
<script src="자바스크립트 파일 경로"></script>

 * 자바스크립트 파일의 확장명은 .jsx
 
자바스크립트의 주석문 
한 줄 주석 : //
여러줄 주석 : /* */

변수(Variable)
변수란 데이터를 저장할 수 있는 메모리 공간을 의미합니다.
값이 변경될 수 있으며 자바스크립트에서는 let 키워드를 사용하여
변수를 선언하고 선언되지 않은 변수를 사용하거나 접근하려고 하면
오류가 발생합니다.

var 변수명; //변수를 선언
변수명 = 값; //변수를 초기화

let 변수명; //변수를 선언
변수명 = 값; //변소를 초기화



let num;
num = 10;


var num;
num = 10;


 * var를 사용하지 않는 이유
 1. 같은 이름의 변수를 선언할 수 있음
 2. 지역변수와 전역변수의 구별이 없음


 * use strict
 strict mode 사용을 한다는 의미이며 코드를 엄격하게 사용하도록 함

<script>
    'use strict';
    ...
</script>

상수(constant)
한번 선언된 상수는 다시 재정의 할 수 없으며, 값도 재할당 할 수 없습니다.

const 상수명;
상수명 값 (X)

const 상수명 = 값(O);
상수명 = 값(X) // 재살당 할 수 없음

숫자형, 문자형, 참 또는 거짓에 상대값

변수 만드는 규칙
- 사용가능한 문자는 "영문자, 숫자, _, $"
- 숫자로 시작할 수 없다.
- 공백을 허용하지 않는다.
- 자바스크립트 문법안에서 규정한 예약어는 변수로 사용할 수 없다.

숫자형(number)
자바스크립트는 다른 언어와 달리 정수와 실수를 구분하지 않습니다.
모든 수를 실수 하나로만 표현합니다.

문자열형(string)
자바스크립트는 문자열을 쌍따옴표, 따옴표로 둘러싸인 문자의 집합을 의미합니다.

typeof() 함수
타입을 나타내는 문자열을 리턴합니다.

불리언형(Boolean)
참(true) 또는 거짓(false)으로 표현되는 값이다.

const b1 = true;    // 값이 있으면 true
const b2 = false;   // 0, null, undefined

undefined, null 형
undefined : 타입이 정해지지 않은 것을 의미합니다.
            -> 변수 선언 후 값이 정해지지 않은 경우
null : 값이 정해지지 않은 것을 의미합니다. -> null로 변수를 초기화 한 경우
            -> object 타입

 * NaN(Not a Number)
 정의되지 않은 값이나 표현할 수 없는 값ㅇ르 뜻합니다.
 예를들어 0을 0으로 나누거나, 숫자로 변환할 수 없는 연산을 시도한 경우 변환합니다.

객체형(object)
여러 속성을 하나의 변수에 저장할 수 있도록 해주는 데이터 타입입니다.


let num = 100; //일반적인 변수 값이 하나만 존재
console.log(num); //100 출력


let arr = [10, 20, 30, 40, 50]; //배열 변수
console.log(arr[0]); //10 출력
console.log(arr[1]); //20 출력
console.log(arr[2]); //30 출력
console.log(arr[3]); //40 출력
console.log(arr[4]); //50 출력

let student = {"name":"Knagsiwoo", "age":17};
                ----------------    -------
                 key    value        key value

console.log(student.name); //Kangsiwoo 출력

심볼형(Symbal)
유일하고 변경 불가능한 기본값을 만듭니다. 객체 속성의 key값으로도 사용할 수 있습니다.

const sym1 = Symebol("apple");
const sym2 = Symebol("apple");

console.log(sym1 === sym2); //false


자바스크립트의 타입 변환
자바스크립트의 변수는 타입이 고저오디어 있지 않으며,
같은 변수에 다른 타입의 값을 대입할 수 있습니다.

lat a = 10;
a = "안녕";


암시적 타입 변환
타입의 값을 기대하는 곳에 다른 타입의 값이 오면 자동으로 타입을 변환해서 사용합니다.

명시적 타입 변환
자바스크립트는 자동으로 타입 변화를 사용하지만 종종 명시적으로 타입을 변환할 필요가
있습니다. 이 때 사용하는 함수는 다음과 같습니다.

Number() : 문자를 숫자로 변환
Number("10"+"5") : 숫자나 불린등을 문자형으로 변환
String() : 문자나 숫자등을 불린형으로 변환
Boolean() :모든 자료형을 객체형으로 변환
Object() : 문자형을 객체형으로 변환
parseInt() : 문자형을 int형으로 변환
parseFloat() : 문자형을 float형으로 변환


자바스크립트 대화상자
alert() 또는 Window.alert() : 사용자에게 메세지를 보여주고, 확인을 기다립니다.

confirm() 또는 Window.confirm() : 사용자에게 메세지를 보여주고 확인이나 취소를 누르면
                                    그 결과를 불리언값으로 리턴합니다
            예> const result = confirm('확인 또는 취소를 눌러주세요.');

prompt() 또는 Window.prompt() : 사용자에게 메세지를 보여주고
                                사용자가 입력한 문자열을 리턴합니다.
            예> const result = prompt('이름을 입력하세요.')